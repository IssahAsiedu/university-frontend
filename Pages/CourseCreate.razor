@page "/courses/create"
@using AutoMapper;
@using UniversityShared.Models;
@using UniversityWeb.Repositories;
@inject IJSRuntime JsRuntime



<h4>Course</h4>

<hr />

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@course" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />


            <div class="form-group" style="margin-top: 24px;">
                <label for="course-title" class="control-label">Title</label>
                <InputText @bind-Value="course.Title" class="form-control"  id="course-title"/>
                <ValidationMessage For="() => course.Title" />
            </div>

            <div class="form-group" style="margin-top: 24px;">
                <label for="course-number" class="control-label">Number</label>
                <InputText @bind-Value="course.CourseNumber" class="form-control" />
                <ValidationMessage For="() => course.CourseNumber" />
            </div>

            <div class="form-group" style="margin-top: 24px;">
                <label for="course-credits" class="control-label">Credits</label>
                <input @bind="course.Credits" class="form-control" />
                <ValidationMessage For="() => course.Credits" />
            </div>

            <div class="form-group" style="margin-top: 24px;">
                <label asp-for="Course.Department" class="control-label" style="display:block; margin-bottom: 5px;">Department</label>
               
                <InputSelect @bind-Value="course.DepartmentID">
                    <option value="">-- Select Department --</option>
                    @foreach(var department in departments)
                    {
                        <option value="@Guid.Parse(department.DepartmentID)">@department.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => course.DepartmentID" />
            </div>
            <div class="form-group" style="margin-top: 10px;">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </EditForm>
    </div>
    <div class="form-group" style="margin-top: 20px;">
        @if (saving)
        {
            <span>Saving Details....</span>
        }
    </div>
</div>
<div style="margin-top: 10px;">
    <a href="/courses">Back to List</a>
</div>


@code {
    private bool saving = false;

    private Course course = new Course();

    private List<DepartmentResponseData> departments = new List<DepartmentResponseData>();

    [Inject]
    public required IMapper mapper { get; set; }


    [Inject]
    public required CoursesRepository CoursesRepo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        departments = await CoursesRepo.GetDepartments();
    }

    private async void HandleValidSubmit()
    {
        saving = true;
        var courseCreationData = mapper.Map<CourseCreationData>(course);

        await CoursesRepo.CreateCourse(courseCreationData);

        await JsRuntime.InvokeVoidAsync("alert", "Saved");

        saving = false;
        StateHasChanged();
    }
}
