@page "/students/{Id}"
@using UniversityShared.Models;
@using UniversityWeb.Repositories;

<h3 style="display: flex; align-items: center; gap: 10px;"> 
    @studentData?.FirstName 
    <span style="color: white; font-size: 40px; width: 50px; height: 50px; background: black; border-radius: 50%; display: flex; justify-content: center;">
        &#8887;
    </span> 
</h3>


@if (studentData != null)
{
    <div>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                Last Name
            </dt>
            <dd class="col-sm-10">
                @studentData.LastName
            </dd>
            <dt class="col-sm-2">
                First Name
            </dt>
            <dd class="col-sm-10">
                @studentData.FirstName
            </dd>
            <dt class="col-sm-2">
                Enrollment Date
            </dt>
            <dd class="col-sm-10">
                @studentData.EnrollmentDate
            </dd>
            <dt class="col-sm-2">
                Enrollments
            </dt>
            <dd class="col-sm-10">
                <table class="table">
                    <tr>
                        <th>Course Title</th>
                        <th>Grade</th>
                    </tr>
                    @foreach (var item in studentData.Enrollments)
                    {
                        <tr>
                            <td>
                                @item.Course!.Title
                            </td>
                            <td>
                                @foreach(var grade in Enum.GetValues(typeof(Grade)))
                                {
                                    <span><input type="checkbox" /> @grade </span>
                                }
                            </td>
                        </tr>
                    }
                </table>
            </dd>
        </dl>
    </div>
}

<div>
    <a href="/student/@studentData?.ID">Edit</a> |
    <a href="/students">Back to List</a>
</div>


@code {
    [Parameter]
    public required string Id { get; set; }

    private StudentResponseData? studentData = null;

    [Inject]
    public required StudentsRepository StudentsRepo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        studentData = await StudentsRepo.GetStudentData(Id);
    }
}
